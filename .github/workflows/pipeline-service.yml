name: Github Action Pipeline for FarmByte-Service

on:
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!develop'  # excludes develop
      - '!main'   # excludes main
    paths:
      - farm-byte-service/**
      - docker/service/**
      - 'docker-compose.yml'
      - .github/workflows/**

jobs:

  compile:
    runs-on: self-hosted
    name: Compile project
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'corretto'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.8

      - name: Compile project
        run: |
          cd farm-byte-service
          mvn clean compile

  unit-tests:
    runs-on: self-hosted
    name: Unit Tests
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'corretto'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.8

      - name: Test the project
        run: |
          cd farm-byte-service
          mvn clean test

  build-jar:
    runs-on: self-hosted
    name: Build Jar
    needs: [compile, unit-tests]
    steps:
      - name: Build the Project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'corretto'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.8

      - name: Test the project
        run: |
          cd farm-byte-service
          mvn clean package -DskipTests

  build-image:
    runs-on: self-hosted
    name: Build
    needs: [build-jar]
    steps:
      - name: Build the Project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'corretto'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.8
      - name: Build project
        run: |
          cd farm-byte-service
          mvn clean package -DskipTests
      - name: Extract project version
        id: extract_version
        run: |
          cd farm-byte-service
          echo "VERSION=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to docker registry
        uses: docker/build-push-action@v5
        with:
          context: farm-byte-service
          file: docker/service/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/farm-byte-service:${{ steps.extract_version.outputs.VERSION }}, ${{ secrets.DOCKERHUB_USERNAME }}/farm-byte-service:latest
          build-args: |
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
  deploy-service:
    name: Deploy FarmByte Service
    runs-on: self-hosted
    needs: [build-image]
    steps:
      - name: Create deployment folder
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_IP }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: mkdir -p ci_cd
      - name: Copy docker compose file
        run: |
          scp -i ${{  secrets.SERVER_PUBLIC_KEY }} docker-compose.yml ${{ secrets.SERVER_USERNAME}}@${{ secrets.SERVER_IP }}:ci-cd/

      - name: Set environment variables and deploy
        run: |
          ssh -i ${{  secrets.SERVER_PUBLIC_KEY }} ${{ secrets.SERVER_USERNAME}}@${{ secrets.SERVER_IP }} <<EOF
          export DB_USER=${{ secrets.DB_USER }}
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          export DB_SERVER=${{ secrets.DB_SERVER }}
          export DB_NAME=${{ secrets.DB_NAME }}
          export DB_PORT=${{ secrets.DB_PORT }}
          export APP_PORT=${{ secrets.APP_PORT }}
          export APP_PORT=${{ secrets.ACTIVE_PROFILE }}ƒ◊
          cd ci-cd
          docker compose -f docker-compose.yml pull -q
          docker compose -f docker-compose.yml up -d
          EOF