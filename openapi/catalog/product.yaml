openapi: 3.1.0
info:
  title: Product API
  description: |
    REST API endpoints for Product
  version: 1.0.0
servers:
  - url: http://localhost:8085/api/v1/catalog
    description: Development Server
  - url: http://localhost:8080/api/v1/catalog
    description: Production server
tags:
  - name: Product
    description: "The Product API"

paths:
  /products:
    post:
      tags:
        - Product
      summary: create a product
      operationId: createProduct
      security:
        - oAuth:
            - create:product
      requestBody:
        required: true
        description: product object to be created
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
                - createProductViewRequest
              properties:
                createProductViewRequest:
                  $ref: '#/components/schemas/CreateProductViewRequest'
                image:
                  type: string
                  format: binary
      parameters:
        - $ref: '../common/parameters/accept-language.yaml#/accept-language'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductViewApiResponse'
        400:
          description: bad operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        404:
          description: not found operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        409:
          description: conflict operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    get:
      tags:
        - Product
      operationId: findProducts
      summary: find all products
      security:
        - oAuth:
            - read:product
      parameters:
        - $ref: '../common/parameters/accept-language.yaml#/accept-language'
        - $ref: '../common/parameters/page.yaml#/page'
        - $ref: '../common/parameters/size.yaml#/size'
        - $ref: '../common/parameters/attribute.yaml#/attribute'
        - $ref: '../common/parameters/direction.yaml#/direction'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindProductsViewApiResponse'
  /products/{productId}:
    get:
      tags:
        - Product
      summary: find product by id
      operationId: findProductById
      security:
        - oAuth:
            - read:product
      parameters:
        - $ref: '../common/parameters/accept-language.yaml#/accept-language'
        - $ref: '#/components/parameters/productId'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindProductByIdViewApiResponse'
        404:
          description: not found operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    put:
      tags:
        - Product
      summary: update product by id
      operationId: updateProductById
      security:
        - oAuth:
            - update:product
      parameters:
        - $ref: '../common/parameters/accept-language.yaml#/accept-language'
        - $ref: '#/components/parameters/productId'
      requestBody:
        required: true
        description: product object to be updated
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
                - updateProductViewRequest
              properties:
                updateProductViewRequest:
                  $ref: '#/components/schemas/UpdateProductViewRequest'
                image:
                  type: string
                  format: binary
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductViewApiResponse'
        400:
          description: bad operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        404:
          description: not found operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        409:
          description: conflict operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /products/search:
    get:
      tags:
        - Product
      summary: search product by a keyword
      operationId: searchProduct
      security:
        - oAuth:
            - read:product
      parameters:
        - $ref: '../common/parameters/accept-language.yaml#/accept-language'
        - $ref: '../common/parameters/page.yaml#/page'
        - $ref: '../common/parameters/size.yaml#/size'
        - $ref: '../common/parameters/attribute.yaml#/attribute'
        - $ref: '../common/parameters/direction.yaml#/direction'
        - $ref: '../common/parameters/keyword.yaml#/keyword'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProductsViewApiResponse'
        404:
          description: not found operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
components:
  parameters:
    productId:
      in: path
      name: productId
      required: true
      schema:
        type: string
        format: uuid
  schemas:
    ApiErrorResponse:
      $ref: '../common/schemas/api-error-response.yaml#/ApiErrorResponse'
    ImageViewRequest:
      type: object
      required:
        - image
      properties:
        image:
          type: string
          format: binary
    CreateProductViewRequest:
      type: object
      required:
        - name
        - type
        - categoryId
      properties:
        name:
          type: string
          x-field-extra-annotation: "@jakarta.validation.constraints.NotBlank"
        reference:
          type: string
        purchasePrice:
          type: number
          format: decimal
        salePrice:
          type: number
          format: decimal
        purchasable:
          type: boolean
        sellable:
          type: boolean
        type:
          type: string
          enum:
            - STOCK
            - CONSUMABLE
            - SERVICE
        categoryId:
          type: string
          format: uuid
        stockUomId:
          type: string
          format: uuid
        purchaseUomId:
          type: string
          format: uuid
        filename:
          type: string
    ProductView:
      type: object
      required:
        - id
        - name
        - filename
        - salePrice
        - purchasePrice
        - purchasable
        - sellable
        - categoryId
        - type
        - active
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          x-field-extra-annotation: "@jakarta.validation.constraints.NotBlank"
        reference:
          type: string
        purchasePrice:
          type: number
          format: decimal
        salePrice:
          type: number
          format: decimal
        purchasable:
          type: boolean
        sellable:
          type: boolean
        filename:
          type: string
        type:
          type: string
          enum:
            - STOCK
            - CONSUMABLE
            - SERVICE
        categoryId:
          type: string
          format: uuid
        stockUomId:
          type: string
          format: uuid
        purchaseUomId:
          type: string
          format: uuid
        active:
          type: boolean
    ProductViewResponse:
      allOf:
        - $ref: '#/components/schemas/ProductView'
    CreateProductViewResponse:
      allOf:
        - $ref: '#/components/schemas/ProductViewResponse'
    CreateProductViewApiResponse:
      allOf:
        - $ref:  '../common/schemas/api-success-response.yaml#/ApiSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/CreateProductViewResponse'
    FindProductByIdViewResponse:
      allOf:
        - $ref: '#/components/schemas/ProductViewResponse'
    FindProductByIdViewApiResponse:
      allOf:
        - $ref: '../common/schemas/api-success-response.yaml#/ApiSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/FindProductByIdViewResponse'
    FindProductsViewResponse:
      allOf:
        - $ref: '#/components/schemas/ProductViewResponse'
    FindProductsPageInfoViewResponse:
      allOf:
        - $ref: '../common/schemas/page-info-view-response.yaml#/PageInfoViewResponse'
        - type: object
          properties:
            elements:
              type: array
              items:
                $ref: '#/components/schemas/FindProductsViewResponse'
    FindProductsViewApiResponse:
      allOf:
        - $ref:  '../common/schemas/api-success-response.yaml#/ApiSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/FindProductsPageInfoViewResponse'
    SearchProductsViewResponse:
      allOf:
        - $ref: '#/components/schemas/ProductViewResponse'
    SearchProductsPageInfoViewResponse:
      allOf:
        - $ref: '../common/schemas/page-info-view-response.yaml#/PageInfoViewResponse'
        - type: object
          properties:
            elements:
              type: array
              items:
                $ref: '#/components/schemas/SearchProductsViewResponse'
    SearchProductsViewApiResponse:
      allOf:
        - $ref: '../common/schemas/api-success-response.yaml#/ApiSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/SearchProductsPageInfoViewResponse'
    UpdateProductViewRequest:
      allOf:
        - $ref: '#/components/schemas/ProductView'
    UpdateProductViewResponse:
      allOf:
        - $ref: '#/components/schemas/ProductView'
    UpdateProductViewApiResponse:
      allOf:
        - $ref: '../common/schemas/api-success-response.yaml#/ApiSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/UpdateProductViewResponse'