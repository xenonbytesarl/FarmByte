openapi: 3.1.0
info:
  title: Category of Product API
  description: |
    REST API endpoints for Category Product
  version: 1.0.0
servers:
  - url: http://localhost:8085/api/v1/catalog
    description: Development Server
  - url: http://localhost:8080/api/v1/catalog
    description: Production server
tags:
  - name: ProductCategory
    description: "The Product Category API"

paths:
  /product-categories:
    post:
      tags:
        - ProductCategory
      summary: create a category product
      operationId: createProductCategory
      security:
        - oAuth:
            - create:product:category
      requestBody:
        required: true
        description: category product object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductCategoryViewRequest'
      parameters:
        - $ref: '../common/parameters/accept-language.yaml#/accept-language'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductCategoryViewApiResponse'
        400:
          description: bad operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        404:
          description: not found operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        409:
          description: conflict operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    get:
      tags:
        - ProductCategory
      operationId: findProductCategories
      summary: find all category of product
      security:
        - oAuth:
            - read:product:category
      parameters:
        - $ref: '../common/parameters/accept-language.yaml#/accept-language'
        - $ref: '../common/parameters/page.yaml#/page'
        - $ref: '../common/parameters/size.yaml#/size'
        - $ref: '../common/parameters/attribute.yaml#/attribute'
        - $ref: '../common/parameters/direction.yaml#/direction'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindProductCategoriesViewApiResponse'
  /product-categories/{productCategoryId}:
    get:
      tags:
        - ProductCategory
      summary: find category of product by id
      operationId: findProductCategoryById
      security:
        - oAuth:
            - read:product:category
      parameters:
        - $ref: '../common/parameters/accept-language.yaml#/accept-language'
        - $ref: '#/components/parameters/productCategoryId'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindProductCategoryByIdViewApiResponse'
        404:
          description: not found operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    put:
      tags:
        - ProductCategory
      summary: update category of product by id
      operationId: updateProductCategoryById
      security:
        - oAuth:
            - read:product:category
      parameters:
        - $ref: '../common/parameters/accept-language.yaml#/accept-language'
        - $ref: '#/components/parameters/productCategoryId'
      requestBody:
        required: true
        description: category product object to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductCategoryViewRequest'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductCategoryViewApiResponse'
        400:
          description: bad operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        404:
          description: not found operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        409:
          description: conflict operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /product-categories/search:
    get:
      tags:
        - ProductCategory
      summary: search category of product by a keyword
      operationId: searchProductCategory
      security:
        - oAuth:
            - read:product:category
      parameters:
        - $ref: '../common/parameters/accept-language.yaml#/accept-language'
        - $ref: '../common/parameters/page.yaml#/page'
        - $ref: '../common/parameters/size.yaml#/size'
        - $ref: '../common/parameters/attribute.yaml#/attribute'
        - $ref: '../common/parameters/direction.yaml#/direction'
        - $ref: '../common/parameters/keyword.yaml#/keyword'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProductCategoriesViewApiResponse'
        404:
          description: not found operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
components:
  parameters:
    productCategoryId:
      in: path
      name: productCategoryId
      required: true
      schema:
        type: string
        format: uuid
  schemas:
    ApiErrorResponse:
      $ref: '../common/schemas/api-error-response.yaml#/ApiErrorResponse'
    CreateProductCategoryViewRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          x-field-extra-annotation: "@jakarta.validation.constraints.NotBlank"
        parentProductCategoryId:
          type: string
          format: uuid
    ProductCategoryView:
      type: object
      required:
        - id
        - name
        - active
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          x-field-extra-annotation: "@jakarta.validation.constraints.NotBlank"
        parentProductCategoryId:
          type: string
          format: uuid
        active:
          type: boolean
    ProductCategoryViewResponse:
      allOf:
        - $ref: '#/components/schemas/ProductCategoryView'
    CreateProductCategoryViewResponse:
      allOf:
        - $ref: '#/components/schemas/ProductCategoryViewResponse'
    CreateProductCategoryViewApiResponse:
      allOf:
        - $ref: '../common/schemas/api-success-response.yaml#/ApiSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/CreateProductCategoryViewResponse'
    FindProductCategoryByIdViewResponse:
      allOf:
        - $ref: '#/components/schemas/ProductCategoryViewResponse'
    FindProductCategoryByIdViewApiResponse:
      allOf:
        - $ref: '../common/schemas/api-success-response.yaml#/ApiSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/FindProductCategoryByIdViewResponse'
    FindProductCategoriesViewResponse:
      allOf:
        - $ref: '#/components/schemas/ProductCategoryViewResponse'
    FindProductCategoriesPageInfoViewResponse:
      allOf:
        - $ref: '../common/schemas/page-info-view-response.yaml#/PageInfoViewResponse'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/FindProductCategoriesViewResponse'
    FindProductCategoriesViewApiResponse:
      allOf:
        - $ref: '../common/schemas/api-success-response.yaml#/ApiSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/FindProductCategoriesPageInfoViewResponse'
    SearchProductCategoriesViewResponse:
      allOf:
        - $ref: '#/components/schemas/ProductCategoryViewResponse'
    SearchProductCategoriesPageInfoViewResponse:
      allOf:
        - $ref: '../common/schemas/page-info-view-response.yaml#/PageInfoViewResponse'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/SearchProductCategoriesViewResponse'
    SearchProductCategoriesViewApiResponse:
      allOf:
        - $ref: '../common/schemas/api-success-response.yaml#/ApiSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/SearchProductCategoriesPageInfoViewResponse'
    UpdateProductCategoryViewRequest:
      allOf:
        - $ref: '#/components/schemas/ProductCategoryView'
    UpdateProductCategoryViewResponse:
      allOf:
        - $ref: '#/components/schemas/ProductCategoryView'
    UpdateProductCategoryViewApiResponse:
      allOf:
        - $ref: '../common/schemas/api-success-response.yaml#/ApiSuccessResponse'
        - type: object
          properties:
            data:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/UpdateProductCategoryViewResponse'